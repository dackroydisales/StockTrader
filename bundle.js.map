{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB;;AAEpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2CAA2C;AACjE;AACA;AACA;;AAEA;AACA,oCAAoC,aAAa;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;;;AAGxB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","// include \n\nconst PRICE_AXIS_START = 620;\nconst TURN_AXIS_START = 100;\nconst PRICE_AXIS_END = 100;\nconst TURN_AXIS_END = 1100; //REFACTOR: with 100 time segments of 10, full size of graphs\nconst MY_WIDTH = 1280;\nconst MY_HEIGHT = 720;\n\nconst WORKING_HEIGHT = Math.abs(PRICE_AXIS_END - PRICE_AXIS_START);\n//NB: The X-axis is 'reversed' in HTML canvas\nconst WORKING_LENGTH = TURN_AXIS_START - TURN_AXIS_END;\n\nconst INITIAL_PORTFOLIO = 10000;\nlet p_value = INITIAL_PORTFOLIO;\n\nfunction updatePValue() {\n  portfolio_el.innerHTML = \"Portfolio: $\" + p_value;\n}\n\nconst START_OIL_TICKER = 80;\nlet oil_ticker = START_OIL_TICKER;\n\nlet MAX_PRICE = 160;//start price * 2\n\nfunction updateOilPrice() {\n  oil_el.innerHTML = \"Current commodity price: \" + oil_ticker;\n}\n\nlet last_price = oil_ticker;\n\nfunction updateLastPrice() {\n  last_price_el.innerHTML = \"Previous commodity price: \" + last_price;\n}\n\nlet ipos = 0;\n\nfunction updatePosition() {\n  if(ipos > 0)\n  {\n    position_el.innerHTML = \"Current position: LONG \" + ipos;\n  } else if(ipos === 0) {\n    position_el.innerHTML = \"Current position: No position\";\n  } else {\n    position_el.innerHTML = \"Current position: SHORT \" + Math.abs(ipos);\n  }\n}\n\nlet turns_left = 10;\n\nfunction updateTurnsLeft() {\n  turns_el.innerHTML = \"Turns left: \" + turns_left;\n}\n\nfunction consume_turn() {\n  turns_left -= 1;\n}\n\nfunction increase() {\n  ipos += 100;\n  updatePosition();\n}\n\nfunction decrease() {\n  ipos -= 100;\n  updatePosition();\n}\n\nfunction game_loop(){\n  btn_plus.addEventListener(\"click\", increase);\n  btn_minus.addEventListener(\"click\", decrease);\n  btn_start.disabled = true;\n  investment_phase();\n}\n\nlet de_container = document.createElement(\"div\");\nde_container.className = \"ST-container day\";\ndocument.body.appendChild(de_container);\n\nlet title_container = document.createElement(\"div\");\ntitle_container.className = \"title-container day\";\nde_container.appendChild(title_container);\n\nlet title = document.createElement(\"p\");\ntitle.className = \"title\";\ntitle.innerHTML = \"StockTrader - Beat The Market!\";\ntitle_container.appendChild(title);\n\n\n\nlet settings_container = document.createElement(\"div\");\nsettings_container.className = \"settings-container\";\nde_container.appendChild(settings_container);\n\nlet btn_start = document.createElement(\"BUTTON\");\nbtn_start.innerHTML = \"Start Game\";\nbtn_start.addEventListener(\"click\", game_loop);\nbtn_start.className = \"day\";\nsettings_container.appendChild(btn_start);\n\nlet btn_day = document.createElement(\"BUTTON\");\nbtn_day.innerHTML = \"Day Mode\";\nbtn_day.addEventListener(\"click\", set_day_mode);\nbtn_day.className = \"day\";\nsettings_container.appendChild(btn_day);\n\nlet btn_night = document.createElement(\"BUTTON\");\nbtn_night.innerHTML = \"Night Mode\";\nbtn_night.addEventListener(\"click\", set_night_mode);\nbtn_night.className = \"day\";\nsettings_container.appendChild(btn_night);\n\nfunction set_day_mode() {\n\n  btn_start.className = \"day\";\n  btn_day.className = \"day\";\n  btn_night.className = \"day\";\n  btn_plus.className = \"day\";\n  btn_minus.className = \"day\";\n\n  title_container.className = \"title-container day\";\n\n  portfolio_el.className = \"day\";\n  oil_el.className = \"day\";\n  last_price_el.className = \"day\";\n  position_el.className = \"day\";\n  turns_el.className = \"day\";\n  info_el.className = \"day\";\n\n  how_to_play_btn.className = \"day\";\n  stock_terminology_btn.className = \"day\";\n  instructional_text.className = \"day\";\n\n  canvas.className = \"day\";\n\n  re_render();\n\n  de_container.className = \"ST-container day\";\n}\n\nfunction set_night_mode() {\n  btn_start.className = \"night\";\n  btn_day.className = \"night\";\n  btn_night.className = \"night\";\n  btn_plus.className = \"night\";\n  btn_minus.className = \"night\";\n\n  title_container.className = \"title-container night\";\n\n  portfolio_el.className = \"night\";\n  oil_el.className = \"night\";\n  last_price_el.className = \"night\";\n  position_el.className = \"night\";\n  turns_el.className = \"night\";\n  info_el.className = \"night\";\n\n  how_to_play_btn.className = \"night\";\n  stock_terminology_btn.className = \"night\";\n  instructional_text.className = \"night\";\n\n  canvas.className = \"night\";\n\n  re_render();\n\n  de_container.className = \"ST-container night\";\n}\n\nlet seconds_left;\n\nfunction investment_phase()\n{\n  ipos = 0;\n  updatePosition();\n  if(flag_game_over === false)\n  {\n    seconds_left = 10;\n    info_el.innerHTML = \"Investment phase start!\";\n    setTimeout(() => {interval = setInterval(update_timer, 1000)}, 700);\n    setTimeout(enter_tick, 11700);\n  }\n}\n\nfunction update_timer(){\n    info_el.innerHTML = `You have ${seconds_left} seconds left to invest.`;\n    seconds_left--;\n}\n\nfunction enter_tick(){\n  clearInterval(interval);\n  info_el.innerHTML = \"Trading start!\";\n  tick();\n}\n\nlet last_point = [TURN_AXIS_START, draw_the_price()];\nconst TIME_SEGMENT = 10;//10px\n\n\nfunction investment_ticker_update(last) {\n  p_value = p_value + ipos * (oil_ticker - last);\n}\n\nlet flag_game_over = false;\n\nfunction gameOver() {\n  btn_plus.removeEventListener(\"click\", increase);\n  btn_minus.removeEventListener(\"click\", decrease);\n  if(p_value >= (INITIAL_PORTFOLIO * 2))\n  {\n    info_el.innerHTML = \"You win!\";\n  } else if (p_value <= 0)\n  {\n    info_el.innerHTML = \"You lose!\";\n  } else {\n    info_el.innerHTML = \"Game over!\";\n  }\n  flag_game_over = true;\n}\n\n//ratio of 250/10 = the graph exceeds its limits after a 75/25 result, very rare\n\nlet prev_ticker = [];\n\nfunction tick() {\n  btn_plus.removeEventListener(\"click\", increase);\n  btn_minus.removeEventListener(\"click\", decrease);\n  btn_day.removeEventListener(\"click\", set_day_mode);\n  btn_night.removeEventListener(\"click\", set_night_mode);\n  prev_ticker = [oil_ticker];\n  last_price = oil_ticker;\n  render_axes();\n  let interval = setInterval(() => {\n    let oil_prev_ticker = oil_ticker;\n    if (Math.random() > 0.5) {\n      oil_ticker += 1;\n    } else {\n      oil_ticker -= 1;\n    }\n    updateOilPrice();\n    prev_ticker.push(oil_ticker);\n    investment_ticker_update(oil_prev_ticker);\n    updatePValue();\n    render_tick();\n  }, 20);\n  setTimeout(() => {\n    clearInterval(interval);\n    btn_plus.addEventListener(\"click\", increase);\n    btn_minus.addEventListener(\"click\", decrease);\n    btn_day.addEventListener(\"click\", set_day_mode);\n    btn_night.addEventListener(\"click\", set_night_mode);\n    consume_turn();\n    updateLastPrice();\n    updateTurnsLeft();\n\n    if (turns_left === 0 || p_value <= 0 || p_value >= INITIAL_PORTFOLIO * 2) {\n      gameOver();\n    } else {\n      investment_phase();\n    }\n  }, 2000);\n}\n\nfunction re_render()\n{\n    if(prev_ticker.length > 0)\n    {\n      render_these_axes(prev_ticker[0]);\n      // last_point = [\n      //   TURN_AXIS_START, \n      //   draw_this_price(prev_ticker[0])];\n      for(let i = 1; i < prev_ticker.length; i++)\n      {\n        ctx.beginPath();\n        if (canvas.className === \"day\") {\n          ctx.strokeStyle = \"tomato\";\n        } //night\n        else {\n          ctx.strokeStyle = \"lime\";\n        }\n        ctx.lineWidth = 3;\n        ctx.moveTo(last_point[0], last_point[1]);\n        ctx.lineTo(\n          last_point[0] + TIME_SEGMENT, \n          draw_this_price(prev_ticker[i]));\n        ctx.stroke();\n        last_point = [\n          last_point[0] + TIME_SEGMENT,\n          draw_this_price(prev_ticker[i]),\n        ];\n      }\n    } else \n    {\n      render_axes();\n    }\n}\n\n\nfunction draw_the_price(){\n  let distance_from_max = ((last_price + START_OIL_TICKER / 2.0 - oil_ticker ) * 1.0 /(START_OIL_TICKER)) * WORKING_HEIGHT;\n  return PRICE_AXIS_END + distance_from_max;\n}\n\nfunction draw_this_price(price)\n{\n  let distance_from_max =\n    (((last_price + START_OIL_TICKER / 2.0 - price) * 1.0) /\n      START_OIL_TICKER) *\n    WORKING_HEIGHT;\n  return PRICE_AXIS_END + distance_from_max;\n}\n\nlet game_container = document.createElement(\"div\");\ngame_container.className = \"game-container\";\nde_container.appendChild(game_container);\n\nlet canvas_container = document.createElement(\"div\");\ncanvas_container.className = \"canvas-container\";\ngame_container.appendChild(canvas_container);\n\nlet canvas = document.createElement(\"canvas\");\ncanvas.setAttribute(\"width\", MY_WIDTH);\ncanvas.setAttribute(\"height\", MY_HEIGHT);\ncanvas.className = \"day\";\nlet ctx=canvas.getContext(\"2d\");\nrender_axes();\ncanvas_container.appendChild(canvas);\n  \n\nfunction render_axes()\n{\n  ctx.clearRect(0, 0, MY_WIDTH, MY_HEIGHT);\n  ctx.beginPath();\n  ctx.lineWidth = 3;\n  if(canvas.className === \"day\")\n  {\n    ctx.strokeStyle = \"black\";\n  } else //night\n  {\n    ctx.strokeStyle = \"white\";\n  }\n  ctx.moveTo(TURN_AXIS_START, PRICE_AXIS_START);\n  ctx.lineTo(TURN_AXIS_END, PRICE_AXIS_START);\n  ctx.moveTo(TURN_AXIS_START, PRICE_AXIS_START);\n  ctx.lineTo(TURN_AXIS_START, PRICE_AXIS_END);\n  ctx.stroke();\n  //render axis labels\n  MAX_PRICE = oil_ticker + (START_OIL_TICKER/2.0);\n  MIN_PRICE = oil_ticker - (START_OIL_TICKER/2.0);\n  ctx.font=\"24px Tahoma\";\n  if (canvas.className === \"day\") {\n    ctx.fillStyle = \"black\";\n  } //night\n  else {\n    ctx.fillStyle = \"white\";\n  }\n  ctx.fillText(MAX_PRICE, TURN_AXIS_START - 50, PRICE_AXIS_END);\n  ctx.fillText(MIN_PRICE, TURN_AXIS_START - 50, PRICE_AXIS_START);\n  ctx.fillText(\"Price\", TURN_AXIS_START - 70, (PRICE_AXIS_END + PRICE_AXIS_START) / 2)\n  //reset last_point\n  last_point = [TURN_AXIS_START, draw_the_price()];\n  //\n}\n\nfunction render_these_axes(price) {\n  ctx.clearRect(0, 0, MY_WIDTH, MY_HEIGHT);\n  ctx.beginPath();\n  ctx.lineWidth = 3;\n  if (canvas.className === \"day\") {\n    ctx.strokeStyle = \"black\";\n  } //night\n  else {\n    ctx.strokeStyle = \"white\";\n  }\n  ctx.moveTo(TURN_AXIS_START, PRICE_AXIS_START);\n  ctx.lineTo(TURN_AXIS_END, PRICE_AXIS_START);\n  ctx.moveTo(TURN_AXIS_START, PRICE_AXIS_START);\n  ctx.lineTo(TURN_AXIS_START, PRICE_AXIS_END);\n  ctx.stroke();\n  //render axis labels\n  MAX_PRICE = price + START_OIL_TICKER / 2.0;\n  MIN_PRICE = price - START_OIL_TICKER / 2.0;\n  ctx.font = \"24px Tahoma\";\n  if (canvas.className === \"day\") {\n    ctx.fillStyle = \"black\";\n  } //night\n  else {\n    ctx.fillStyle = \"white\";\n  }\n  ctx.fillText(MAX_PRICE, TURN_AXIS_START - 50, PRICE_AXIS_END);\n  ctx.fillText(MIN_PRICE, TURN_AXIS_START - 50, PRICE_AXIS_START);\n  ctx.fillText(\n    \"Price\",\n    TURN_AXIS_START - 70,\n    (PRICE_AXIS_END + PRICE_AXIS_START) / 2\n  );\n  //reset last_point\n  last_point = [TURN_AXIS_START, draw_this_price(price)];\n  //\n}\n\n\nfunction render_tick(){\n  ctx.beginPath();\n    if (canvas.className === \"day\") {\n      ctx.strokeStyle = \"tomato\";\n    } //night\n    else {\n      ctx.strokeStyle = \"lime\";\n    }\n  ctx.lineWidth = 3;\n  ctx.moveTo(last_point[0], last_point[1]);\n  ctx.lineTo(last_point[0] + TIME_SEGMENT, draw_the_price());\n  ctx.stroke();\n  last_point =  [last_point[0] + TIME_SEGMENT, draw_the_price()];\n}\n\nlet data_container = document.createElement(\"div\");\ndata_container.className = \"data-container\";\ngame_container.appendChild(data_container);\n\nlet price_container = document.createElement(\"div\");\nprice_container.className = \"price-container\";\ndata_container.appendChild(price_container);\n\n\nlet portfolio_el = document.createElement(\"p\");\nportfolio_el.className = \"day\";\nupdatePValue();\nprice_container.appendChild(portfolio_el);\n\nlet oil_el = document.createElement(\"p\");\noil_el.className = \"day\";\nupdateOilPrice();\nprice_container.appendChild(oil_el);\n\nlet last_price_el = document.createElement(\"p\");\nlast_price_el.className = \"day\";\nupdateLastPrice();\nprice_container.appendChild(last_price_el);\n\nlet turns_el = document.createElement(\"p\");\nturns_el.className = \"day\";\nupdateTurnsLeft();\nprice_container.appendChild(turns_el);\n\nlet trader_container = document.createElement(\"div\");\ntrader_container.className = 'trader-container';\ndata_container.appendChild(trader_container);\n\nlet position_el = document.createElement(\"p\");\nposition_el.className = \"day\";\nupdatePosition();\ntrader_container.appendChild(position_el);\n\nlet btn_plus = document.createElement(\"BUTTON\");\nbtn_plus.innerHTML = \"LONG 100\";\nbtn_plus.className=\"day\";\ntrader_container.appendChild(btn_plus);\n\nlet btn_minus = document.createElement(\"BUTTON\");\nbtn_minus.innerHTML = \"SHORT 100\";\nbtn_minus.className = \"day\";\ntrader_container.appendChild(btn_minus);\n\nlet info_container = document.createElement(\"div\");\ninfo_container.className = \"info-container\";\ndata_container.appendChild(info_container);\n\nlet info_el = document.createElement(\"p\");\ninfo_el.className = \"day\";\ninfo_el.innerHTML = \"Welcome to StockTrader! Press START GAME to begin.\";\ninfo_container.appendChild(info_el);\n\nlet instructional_container = document.createElement(\"div\");\ninstructional_container.className = \"instructional-container\";\ndata_container.appendChild(instructional_container);\n\nfunction show_how_to_play() {\n  let text_string =\n    \"How to play: <br /><br />\\\n  Choose a LONG or SHORT investment position during the investment phase, \\\n  and watch your portfolio's value rise and fall during the trading phase. <br /><br />\\\n  Double your initial portfolio of $10,000 within 10 turns, but don't run out of money \\\n  or the game is over!\";\n  instructional_text.innerHTML = text_string;\n}\n\nfunction show_stock_terminology() {\n  let text_string =\n    \"LONG 100: Gain $100 for each $1 increase in the stock price. \\\n      Lose $100 for each $1 decrease in the stock price.<br /><br />\\\n      SHORT 100: Lose $100 for each $1 increase in the stock price. \\\n      Gain $100 for each $1 decrease in the stock price.<br /><br /> \\\n      Click the LONG button repeatedly to increase your position on a rise in price, or \\\n      to hedge your SHORT position on a fall in price.<br /><br />\\\n      Click the SHORT button repeatedly to increase your position on a fall in price, or \\\n      to hedge your LONG position on a rise in price.\";\n  instructional_text.innerHTML = text_string;\n}\n\nlet instructional_btns_container = document.createElement(\"div\");\ninstructional_btns_container.className = \"instructional-btns\";\ninstructional_container.appendChild(instructional_btns_container);\n\nlet how_to_play_btn = document.createElement(\"button\");\nhow_to_play_btn.className = \"day\";\nhow_to_play_btn.innerHTML = \"How to play?\";\nhow_to_play_btn.addEventListener(\"click\", show_how_to_play);\ninstructional_btns_container.appendChild(how_to_play_btn);\n\nlet stock_terminology_btn = document.createElement(\"button\");\nstock_terminology_btn.className = \"day\";\nstock_terminology_btn.innerHTML = \"LONG 100???\";\nstock_terminology_btn.addEventListener(\"click\", show_stock_terminology);\ninstructional_btns_container.appendChild(stock_terminology_btn);\n\nlet instructional_text = document.createElement(\"p\");\ninstructional_text.className = \"day\";\nshow_how_to_play();\ninstructional_container.appendChild(instructional_text);\n"],"sourceRoot":""}